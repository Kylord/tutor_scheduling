


--Table for course info --

DROP TABLE IF EXISTS USER_T; 
CREATE TABLE USER_T(
	HAWKID VARCHAR(45) NOT NULL, 
	HASHED_PSSWRD VARCHAR(45) NOT NULL, 
	IS_ADMIN BOOLEAN NOT NULL, 
	FIRST_NAME VARCHAR(45), 
	LAST_NAME VARCHAR(45), 
	EMAIL VARCHAR(45)
	PRIMARY KEY(HAWKID)
); 



DROP TABLE IF EXISTS COURSE;
CREATE TABLE COURSE (
    COURSE_ID VARCHAR(45) NOT NULL,
    DEPARTMENT VARCHAR(45) NOT NULL,
    COURSE_NUM INT NOT NULL,
    PRIMARY KEY (COURSE_ID)
);

/* course table */
INSERT INTO course (course_id, department, course_num) VALUES ("CS1120", "Computer Science", "1120");
INSERT INTO course (course_id, department, course_num) VALUES ("MATH1340", "Math", "1340");
INSERT INTO course (course_id, department, course_num) VALUES ("PHYS1440", "Physics", "1440");


DROP TABLE IF EXISTS ROLE_T; 
CREATE TABLE ROLE_T (
	DESCRIPTION VARCHAR(45) NOT NULL, 
	PRIMARY KEY (HAWKID, COURSE_ID), 
	FOREIGN KEY (HAWKID) REFERENCES USER_T(HAWKID), 
	FOREIGN KEY(course_id) REFERENCES COURSE(COURSE_ID)


);


DROP TABLE IF EXISTS probset;

--Table for probset info --
CREATE TABLE probset (
    PROBSET_ID INT  NOT NULL AUTO_INCREMENT, 
	TEXT VARCHAR(100000) NOT NULL,
	PRIMARY KEY (PROBSET_ID)
	FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID)
);

/* problem sets table */


DROP TABLE IF EXISTS TIME_SLOT;

CREATE TABLE TIME_SLOT (
	DATE_TIME DATE TIME(15),
	TUTOR_NAME VARCHAR(45),
	STUDENT_NAME VARCHAR(45),
	CANCELLED_BY_STUD BOOLEAN,
	CENCELLED_BY_TUTOR BOOLEAN,
	LOCATION VARCHAR(45),
	PRIMARY KEY (DATE_TIME),
	FOREIGN KEY(HAWKID) REFERENCES ROLE(HAWKID),
	FOREIGN KEY(COURSE_ID) REFERENCES ROLE(COURSE_ID),
);

DROP TABLE IF EXISTS TUTOR_SCHEDULE;

CREATE TABLE TUTOR_SCHEDULE (
	WEEK_DAY VARCHAR(45),
	NUM_TIME_SLOTS INT,
	FOREIGN KEY (HAWKID) REFERENCES ROLE(HAWKID),
	FOREIGN KEY(COURSE_ID) REFERENCES ROLE(COURSE_ID)
):